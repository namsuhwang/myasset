<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.idlelife.myasset.repository.AssetStockMapper">
    <insert id="insertAssetStock" parameterType="AssetStockEntity">
            INSERT INTO asset_stock (
                asset_id
                ,member_id
                ,org_cd
                ,org_name
                ,stock_acno
                ,able_amt
                ,loan_bal_amt
                ,loan_rate
                ,delete_yn
                ,reg_datetime
                ,last_update_datetime
            ) VALUES
            (
                ${assetId}
                ,${memberId}
                ,#{orgCd}
                ,#{orgName}
                ,#{stockAcno}
                ,${ableAmt}
                ,${loanBalAmt}
                ,#{loanRate}
                ,#{deleteYn}
                ,NOW()
                ,NOW()
            )
    </insert>

    <update id="updateAssetStock" parameterType="AssetStockEntity">
            UPDATE asset_stock
               SET
                   member_id             = ${memberId}
                   ,org_cd                = #{orgCd}
                   ,org_name             = #{orgName}
                   ,stock_acno           = #{stockAcno}
                   ,able_amt             = ${ableAmt}
                   ,loan_bal_amt         = ${loanBalAmt}
                   ,loan_rate            = ${loanRate}
                   ,delete_yn            = #{deleteYn} 
                   ,last_update_datetime = NOW() 
            WHERE asset_id = ${assetId}
    </update>

    <delete id="deleteAssetStock" parameterType="Long">
            UPDATE asset_stock
            SET
               delete_yn = 'Y'
              ,last_update_datetime = NOW()
            WHERE asset_id = ${assetId}
    </delete>

    <select id="selectAssetStock" parameterType="Long" resultType="AssetStockEntity">
            SELECT
                asset_id
                 ,member_id
                 ,org_cd
                 ,org_name
                 ,stock_acno
                 ,able_amt
                 ,loan_bal_amt
                 ,loan_rate
                 ,delete_yn
                 ,reg_datetime
                 ,last_update_datetime
            FROM asset_stock stock
            WHERE stock.asset_id = ${assetId}
    </select>

    <select id="selectAssetStockDto" parameterType="Long" resultType="AssetStockDto">
            SELECT
                asset_id
                 ,member_id
                 ,org_cd
                 ,org_name
                 ,stock_acno
                 ,able_amt
                 ,loan_bal_amt
                 ,loan_rate
                 ,delete_yn
                 ,reg_datetime
                 ,last_update_datetime
            FROM asset_stock stock
            WHERE stock.asset_id = ${assetId}
    </select>

    <select id="selectAssetStockDtoList" parameterType="AssetSearch" resultType="AssetStockDto">
            SELECT
                asset_id
                ,member_id
                ,org_cd
                ,org_name
                ,stock_acno
                ,able_amt
                ,loan_bal_amt
                ,loan_rate
                ,delete_yn
                ,reg_datetime
                ,last_update_datetime
            FROM asset_stock stock
            WHERE 1 = 1
              <if test = 'assetId != null and assetId !=""'>
                    AND stock.asset_id = ${assetId}
              </if>
              <if test = 'memberId != null and memberId !=""'>
                    AND stock.member_id = ${memberId}
              </if>
            <if test = 'deleteYn != null and deleteYn !=""'>
                AND stock.delete_yn = #{deleteYn}
            </if>
    </select>







    <select id="createStockKindId" resultType="Long">
        SELECT IFNULL(MAX(stock_kind_id), 0) + 1 AS stock_kind_id
        FROM stock_kind
    </select>

    <insert id="insertStockKind" parameterType="StockKindEntity">
        INSERT INTO stock_kind (
                stock_kind_id
                ,asset_id
                ,member_id
                ,stock_kind_cd
                ,stock_kind_name
                ,quantity
                ,buy_avg_price
                ,buy_tot_price
                ,cur_unit_price
                ,cur_tot_price
                ,pnl_rate
                ,pnl_amt
                ,delete_yn
                ,reg_datetime
                ,last_update_datetime
            ) VALUES
            (
                ${stockKindId}
                ,${assetId}
                ,${memberId}
                ,#{stockKindCd}
                ,#{stockKindName}
                ,${quantity}
                ,${buyAvgPrice}
                ,${buyTotPrice}
                ,${curUnitPrice}
                ,${curTotPrice}
                ,${pnlRate}
                ,${pnlAmt}
                ,#{deleteYn}
                ,NOW()
                ,NOW()
        )
    </insert>

    <update id="updateStockKind" parameterType="StockKindEntity">
        UPDATE stock_kind
        SET
           asset_id          = ${assetId}
          ,member_id         = ${memberId}
          ,stock_kind_cd     = #{stockKindCd}
          ,stock_kind_name   = #{stockKindName}
          ,quantity          = ${quantity}
          ,buy_avg_price     = ${buyAvgPrice}
          ,buy_tot_price     = ${buyTotPrice}
          ,cur_unit_price    = ${curUnitPrice}
          ,cur_tot_price     = ${curTotPrice}
          ,pnl_rate          = ${pnlRate}
          ,pnl_amt           = ${pnlAmt}
          ,delete_yn         = #{deleteYn}
          ,last_update_datetime = NOW()
        WHERE stock_kind_id = ${stockKindId}
    </update>

    <update id="updateStockKindCurrentStatus" parameterType="StockKindEntity">
        UPDATE stock_kind
        SET
           cur_unit_price    = ${curUnitPrice}
          ,cur_tot_price     = ${curTotPrice}
          ,pnl_rate          = ${pnlRate}
          ,pnl_amt           = ${pnlAmt}
          ,last_update_datetime = NOW()
        WHERE stock_kind_id = ${stockKindId}
    </update>

    <delete id="deleteStockKind" parameterType="Long">
        UPDATE stock_kind
        SET
            delete_yn = 'Y'
           ,last_update_datetime = NOW()
        WHERE stock_kind_id = ${stockKindId}
    </delete>

    <select id="selectStockKind" parameterType="Long" resultType="StockKindEntity">
        SELECT
              stock_kind_id
             ,asset_id
             ,member_id
             ,stock_kind_cd
             ,stock_kind_name
             ,quantity
             ,buy_avg_price
             ,buy_tot_price
             ,cur_unit_price
             ,cur_tot_price
             ,pnl_rate
             ,pnl_amt
             ,delete_yn
             ,reg_datetime
             ,last_update_datetime
        FROM stock_kind sk
        WHERE stock_kind_id = ${stockKindId}
    </select>

    <select id="selectStockKindDto" parameterType="Long" resultType="StockKindDto">
        SELECT
            stock_kind_id
             ,asset_id
             ,member_id
             ,stock_kind_cd
             ,stock_kind_name
             ,quantity
             ,buy_avg_price
             ,buy_tot_price
             ,cur_unit_price
             ,cur_tot_price
             ,pnl_rate
             ,pnl_amt
             ,delete_yn
             ,reg_datetime
             ,last_update_datetime
        FROM stock_kind sk
        WHERE stock_kind_id = ${stockKindId}
    </select>

    <select id="selectStockKindDtoList" parameterType="AssetSearch" resultType="StockKindDto">
        SELECT
            stock_kind_id
            ,asset_id
            ,member_id
            ,stock_kind_cd
            ,stock_kind_name
            ,quantity
            ,buy_avg_price
            ,buy_tot_price
            ,cur_unit_price
            ,cur_tot_price
            ,pnl_rate
            ,pnl_amt
            ,delete_yn
            ,reg_datetime
            ,last_update_datetime
        FROM stock_kind sk
        WHERE 1 = 1
        <if test = 'stockKindId != null and stockKindId !=""'>
            AND sk.stock_kind_id = ${stockKindId}
        </if>
        <if test = 'memberId != null and memberId !=""'>
            AND sk.member_id = ${memberId}
        </if>
        <if test = 'deleteYn != null and deleteYn !=""'>
            AND sk.delete_yn = #{deleteYn}
        </if>
    </select>


    <select id="selectStockKindCodeDtoList" parameterType="StockKindForm" resultType="StockKindCodeDto">
        SELECT
            skc.code, skc.kind_name, skc.exchange
        FROM stock_kind_code skc
        WHERE 1 = 1
        <if test = 'stockKindCd != null and stockKindCd !=""'>
            AND skc.code LIKE CONCAT('%', #{stockKindCd}, '%')
        </if>
        <if test = 'stockKindName != null and stockKindName !=""'>
            AND skc.kind_name LIKE CONCAT('%', #{stockKindName}, '%')
        </if>
        ORDER BY skc.code, skc.kind_name
    </select>








    <select id="createStockTradeId" resultType="Long">
        SELECT IFNULL(MAX(stock_trade_id), 0) + 1 AS stock_trade_id
        FROM stock_trade
    </select>

    <insert id="insertStockTrade" parameterType="StockTradeEntity">
        INSERT INTO stock_trade (
                stock_trade_id
                ,trade_type
                ,stock_kind_id
                ,trade_datetime
                ,trade_type_name
                ,trade_quantity
                ,trade_unit_price
                ,trade_amt
                ,bef_quantity
                ,aft_quantity
                ,bef_buy_avg_price
                ,bef_buy_tot_price
                ,aft_buy_avg_price
                ,aft_buy_tot_price
                ,pnl_rate
                ,pnl_amt
                ,delete_yn
                ,reg_datetime
                ,last_update_datetime
            ) VALUES
            (
                ,${stockTradeId}
                ,#{tradeType}
                ,${stockKindId}
                ,#{tradeDatetime}
                ,#{tradeTypeName}
                ,${tradeQuantity}
                ,${tradeUnitPrice}
                ,${tradeAmt}
                ,${befQuantity}
                ,${aftQuantity}
                ,${befBuyAvgPrice}
                ,${befBuyTotPrice}
                ,${aftBuyAvgPrice}
                ,${aftBuyTotPrice}
                ,${pnlRate}
                ,${pnlAmt}
                ,#{deleteYn}
                ,NOW()
                ,NOW()
            )
    </insert>

    <update id="updateStockTrade" parameterType="StockTradeEntity">
        UPDATE stock_trade
        SET
                 stock_trade_id       = ${stockTradeId}
                ,trade_type           = #{tradeType}
                ,stock_kind_id        = ${stockKindId}
                ,trade_datetime       = #{tradeDatetime}
                ,trade_type_name      = #{tradeTypeName}
                ,trade_quantity            = ${tradeQuantity}
                ,trade_unit_price          = ${tradeUnitPrice}
                ,trade_amt            = ${tradeAmt}
                ,bef_quantity         = ${befQuantity}
                ,aft_quantity         = ${aftQuantity}
                ,bef_buy_avg_price    = ${befBuyAvgPrice}
                ,bef_buy_tot_price    = ${befBuyTotPrice}
                ,aft_buy_avg_price    = ${aftBuyAvgPrice}
                ,aft_buy_tot_price    = ${aftBuyTotPrice}
                ,pnl_rate             = ${pnlRate}
                ,pnl_amt              = ${pnlAmt}
                ,delete_yn            = #{deleteYn}
                ,last_update_datetime = NOW()
        WHERE stock_trade_id = ${stockTradeId}
    </update>

    <delete id="deleteStockTrade" parameterType="Long">
        UPDATE stock_trade
        SET
            delete_yn = 'Y'
          ,last_update_datetime = NOW()
        WHERE stock_trade_id = ${stockTradeId}
    </delete>

    <select id="selectStockTrade" parameterType="Long" resultType="StockTradeEntity">
        SELECT
            stock_trade_id
             ,trade_type
             ,stock_kind_id
             ,trade_datetime
             ,trade_type_name
             ,trade_quantity
             ,trade_unit_price
             ,trade_amt
             ,bef_quantity
             ,aft_quantity
             ,bef_buy_avg_price
             ,bef_buy_tot_price
             ,aft_buy_avg_price
             ,aft_buy_tot_price
             ,pnl_rate
             ,pnl_amt
             ,delete_yn
             ,reg_datetime
             ,last_update_datetime
        FROM stock_trade st
        WHERE stock_trade_id = ${stockTradeId}
    </select>

    <select id="selectLastStockTrade" parameterType="Long" resultType="StockTradeEntity">
        SELECT
            stock_trade_id
             ,trade_type
             ,stock_kind_id
             ,trade_datetime
             ,trade_type_name
             ,trade_quantity
             ,trade_unit_price
             ,trade_amt
             ,bef_quantity
             ,aft_quantity
             ,bef_buy_avg_price
             ,bef_buy_tot_price
             ,aft_buy_avg_price
             ,aft_buy_tot_price
             ,pnl_rate
             ,pnl_amt
             ,delete_yn
             ,reg_datetime
             ,last_update_datetime
        FROM stock_trade st
        WHERE stock_trade_id = (SELECT MAX(stock_trade_id) FROM stock_trade stold WHERE stock_kind_id = ${stockKindId})
    </select>

    <select id="selectStockTradeDto" parameterType="Long" resultType="StockTradeDto">
        SELECT
            stock_trade_id
             ,trade_type
             ,stock_kind_id
             ,trade_datetime
             ,trade_type_name
             ,trade_quantity
             ,trade_unit_price
             ,trade_amt
             ,bef_quantity
             ,aft_quantity
             ,bef_buy_avg_price
             ,bef_buy_tot_price
             ,aft_buy_avg_price
             ,aft_buy_tot_price
             ,pnl_rate
             ,pnl_amt
             ,delete_yn
             ,reg_datetime
             ,last_update_datetime
        FROM stock_trade st
        WHERE stock_trade_id = ${stockTradeId}
    </select>

    <select id="selectStockTradeDtoList" parameterType="AssetSearch" resultType="StockTradeDto">
        SELECT
            stock_trade_id
            ,trade_type
            ,cc.code_name AS trade_type_name
            ,stock_kind_id
            ,trade_datetime
            ,trade_type_name
            ,trade_quantity
            ,trade_unit_price
            ,trade_amt
            ,bef_quantity
            ,aft_quantity
            ,bef_buy_avg_price
            ,bef_buy_tot_price
            ,aft_buy_avg_price
            ,aft_buy_tot_price
            ,pnl_rate
            ,pnl_amt
            ,delete_yn
            ,reg_datetime
            ,last_update_datetime
        FROM stock_trade st
            LEFT OUTER JOIN common_code cc ON cc.div_code = 'STOCK_TRADE_TYPE' AND cc.code = st.trade_type
        WHERE 1 = 1
        <if test = 'stockTradeId != null and stockTradeId !=""'>
            AND st.stock_trade_id = ${stockTradeId}
        </if>
        <if test = 'memberId != null and memberId !=""'>
            AND st.member_id = ${memberId}
        </if>
        <if test = 'deleteYn != null and deleteYn !=""'>
            AND st.delete_yn = #{deleteYn}
        </if>
    </select>
</mapper>